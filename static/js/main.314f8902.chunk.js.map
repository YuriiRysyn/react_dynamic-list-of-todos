{"version":3,"sources":["components/TodoList/Todos.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["Todos","todos","selectUser","onToggleToDo","className","map","todo","key","id","completed","type","checked","onChange","event","title","onClick","userId","TodoList","state","filter","showTodosSelector","this","props","filteredTodosByTitle","toLowerCase","includes","selectedTodosByCompleteStatus","placeholder","value","setState","target","React","Component","CurrentUser","user","showUser","then","data","prevProps","name","email","phone","clearSelectedUser","BASE_URL","selectedUser","fetch","response","json","result","App","selectedUserId","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.314f8902.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nexport const Todos = ({ todos, selectUser, onToggleToDo }) => (\n  <ul className=\"TodoList__list\">\n    {\n      todos.map(todo => (\n        <li\n          key={todo.id}\n          className={todo.completed\n            ? 'TodoList__item TodoList__item--checked'\n            : 'TodoList__item TodoList__item--unchecked'\n          }\n\n        >\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={event => onToggleToDo(event, todo.id)}\n            />\n            <p>{todo.title}</p>\n          </label>\n\n          <button\n            className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n            type=\"button\"\n            onClick={() => selectUser(todo.userId)}\n          >\n            User&nbsp;#\n            {\n              todo.userId\n            }\n          </button>\n        </li>\n      ))\n    }\n  </ul>\n);\n\nTodos.propTypes = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  onToggleToDo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nimport './TodoList.scss';\nimport { Todos } from './Todos';\n\nexport class TodoList extends React.Component {\n  state = {\n    filter: '',\n    showTodosSelector: 'All',\n  }\n\n  render() {\n    const { todos, selectUser, onToggleToDo } = this.props;\n\n    const filteredTodosByTitle = todos\n      .filter(todo => (todo.title !== null))\n      .filter(todo => (\n        (todo.title).toLowerCase()\n          .includes((this.state.filter).toLowerCase())\n      ));\n\n    const selectedTodosByCompleteStatus = todos\n      .filter(todo => (\n        (this.state.showTodosSelector === 'Completed')\n          ? todo.completed === true\n          : todo.completed === false\n      ));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          className=\"TodoList__filter\"\n          placeholder=\"Choose a todo by title\"\n          value={this.state.filter}\n          onChange={(event) => {\n            this.setState({\n              filter: event.target.value,\n            });\n          }}\n        />\n        <select\n          className=\"TodoList__selector-by-completeStatus\"\n          value={this.state.showTodosSelector}\n          onChange={(event) => {\n            this.setState({\n              showTodosSelector: event.target.value,\n            });\n          }}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Completed\">Completed</option>\n          <option value=\"Not Completed\">Not Completed</option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          {(this.state.filter === '')\n            ? (\n              <Todos\n                todos={\n                  this.state.showTodosSelector === 'All'\n                    ? todos\n                    : selectedTodosByCompleteStatus\n                }\n                selectUser={selectUser}\n                onToggleToDo={onToggleToDo}\n              />\n            )\n            : (\n              <Todos\n                todos={\n                  this.state.showTodosSelector === 'All'\n                    ? filteredTodosByTitle\n                    : filteredTodosByTitle\n                      .filter(todo => (\n                        (this.state.showTodosSelector === 'Completed')\n                          ? todo.completed === true\n                          : todo.completed === false\n                      ))}\n                selectUser={selectUser}\n                onToggleToDo={onToggleToDo}\n              />\n            )\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  onToggleToDo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\nstate = {\n  user: '',\n}\n\ncomponentDidMount() {\n  const { userId, showUser } = this.props;\n\n  showUser(userId)\n    .then((data) => {\n      this.setState({\n        user: data,\n      });\n    });\n}\n\ncomponentDidUpdate(prevProps) {\n  const { userId, showUser } = this.props;\n\n  if (userId === prevProps.userId) {\n    return;\n  }\n\n  showUser(userId)\n    .then((data) => {\n      this.setState({\n        user: data,\n      });\n    });\n}\n\nrender() {\n  const { name, email, phone } = this.state.user;\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {\n            this.props.userId\n          }\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{name}</h3>\n      <p className=\"CurrentUser__email\">{email}</p>\n      <p className=\"CurrentUser__phone\">{phone}</p>\n\n      <button\n        className=\"CurrentUser__clear-btn\"\n        type=\"button\"\n        onClick={this.props.clearSelectedUser}\n      >\n        Clear\n      </button>\n    </div>\n  );\n}\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  showUser: PropTypes.func.isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst BASE_URL = `https://mate-api.herokuapp.com`;\n\nexport function getAllToodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json()).then(result => result.data);\n}\n\nexport function selectedUser(userId) {\n  return fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json()).then(result => result.data);\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllToodos, selectedUser } from './api';\n\n// getAll().then(result => console.log(result.data))\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllToodos()\n      .then((todos) => {\n        this.setState({\n          todos,\n        });\n      });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  onToggleToDo = (event, todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => (todo.id === todoId\n        ? {\n          ...todo,\n          completed: !todo.completed,\n        }\n        : todo)),\n    }));\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: '',\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            onToggleToDo={this.onToggleToDo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                showUser={selectedUser}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}